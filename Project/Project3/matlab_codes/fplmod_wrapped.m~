function [xdot_ode] = fplmod_wrapped(tval, xstate)
% The purpose of FPLMOD_WRAPPED is to pass valid input to fplmod.m and
% filter its output so that *only the derivatives of the ode states are
% returned*.

% INPUT:
%     tval: time instance
%     xstate: u, w, q, theta, x, h, m, de, dp
% OUTPUT:
%     xdot_ode: udot, wdot, qdot, thetadot, xdot, hdot, mdot

% The function can also add to global lists the output variables gathered
% from fplmod, so that they may later be processed by the caller.

%% Variable initialization
global de dp
global a_list V_lsit % ouput variables needed
global output_i

%% Wrapping fplmod

% xstate should be compatible with the ode standard - same "type" as xdot_ode
% add the control variables 
x = vertcat(xsate, de, dp);
[xdot]=fplmod(tval,x);


%% Aditional Processing
state_range = 1:7;
output_range = length(state_range)+1:length(xdot);

% extract the output vars
V = 

% pass them into the global lists

output_i = out
%% Return the derivatives - ode45 compatible
xdot_ode = xdot(state_range);
end

% %     Extra output variables, add more if you like
% % I 'll have to modify this !
% % add more variables
%       xdot(8)=airspd;
%       xdot(9)=alfa;
%       xdot(10)=vcal;
%       xdot(11)=rmach;
%       xdot(12)=CL;
%       xdot(13)=nz;